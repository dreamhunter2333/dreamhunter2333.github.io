import{_ as e,c as i,o as t,aj as a}from"./chunks/framework.B0iheTnZ.js";const u=JSON.parse('{"title":"Odoo 继承","description":"","frontmatter":{"title":"Odoo 继承","date":"2019-09-16 19:24:00","tags":["odoo"],"categories":"odoo"},"headers":[],"relativePath":"posts/odoo/Odoo-inherit-inherits-delegate.md","filePath":"posts/odoo/Odoo-inherit-inherits-delegate.md","lastUpdated":1721447105000}'),s={name:"posts/odoo/Odoo-inherit-inherits-delegate.md"},o=a(`<h1 id="odoo-继承" tabindex="-1">Odoo 继承 <a class="header-anchor" href="#odoo-继承" aria-label="Permalink to &quot;Odoo 继承&quot;">​</a></h1><h2 id="inherit" tabindex="-1">_inherit <a class="header-anchor" href="#inherit" aria-label="Permalink to &quot;_inherit&quot;">​</a></h2><ul><li>_name和_inherit不同 <ul><li>_inherit 属性传入多个值来继承多个父模型</li></ul></li><li>_name和_inherit相同 <ul><li>同名继承 修改原模型</li></ul></li></ul><h2 id="inherits-同-delegate" tabindex="-1">_inherits 同 delegate <a class="header-anchor" href="#inherits-同-delegate" aria-label="Permalink to &quot;_inherits 同 delegate&quot;">​</a></h2><ul><li>使用代理继承无需复制数据即可在数据库中复用数据结构，这通过将一个模型嵌入另一个来实现。UML 中这种称作组合(composition)关系：父类无需子类即可存在，而子类必须要有父类才能存在。</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_inherits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {‘res.partner’: ‘partner_id’}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">delegate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span></span></code></pre></div>`,6),n=[o];function l(r,h,d,p,c,_){return t(),i("div",null,n)}const g=e(s,[["render",l]]);export{u as __pageData,g as default};
