import{_ as a,c as s,o,j as e,a as t}from"./chunks/framework.B4uOnG9Z.js";const k=JSON.parse('{"title":"保证消息消费的幂等性","description":"","frontmatter":{"title":"保证消息消费的幂等性","date":"2021-03-17 22:22:13","categories":["mq"],"tags":["mq"]},"headers":[],"relativePath":"posts/mq/ensure-not-repeatedly-consumed.md","filePath":"posts/mq/ensure-not-repeatedly-consumed.md","lastUpdated":1719552876000}'),n={name:"posts/mq/ensure-not-repeatedly-consumed.md"},d=e("h1",{id:"保证消息消费的幂等性",tabindex:"-1"},[t("保证消息消费的幂等性 "),e("a",{class:"header-anchor",href:"#保证消息消费的幂等性","aria-label":'Permalink to "保证消息消费的幂等性"'},"​")],-1),l=e("h2",{id:"保证消息队列消费的幂等性",tabindex:"-1"},[t("保证消息队列消费的幂等性 "),e("a",{class:"header-anchor",href:"#保证消息队列消费的幂等性","aria-label":'Permalink to "保证消息队列消费的幂等性"'},"​")],-1),r=e("p",null,"幂等性，通俗点说，就一个数据，或者一个请求，给你重复来多次，确保对应的数据是不会改变的，不能出错。",-1),i=e("p",null,"结合业务来思考：",-1),c=e("ul",null,[e("li",null,"写库，你先根据主键查一下，存在 update、数据库的唯一键等"),e("li",null,"Redis，每次都是 set，天然幂等性"),e("li",null,"生产者发送每条数据的时候，里面加一个全局唯一的 id，消费时，先根据 id 查询")],-1),_=[d,l,r,i,c];function p(u,m,h,f,x,q){return o(),s("div",null,_)}const y=a(n,[["render",p]]);export{k as __pageData,y as default};
