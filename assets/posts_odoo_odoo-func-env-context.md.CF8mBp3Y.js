import{_ as s,c as t,o as i,aj as a}from"./chunks/framework.BF2cowCO.js";const g=JSON.parse('{"title":"odoo func env.context","description":"","frontmatter":{"title":"odoo func env.context","date":"2019-12-01 22:05:26","categories":"odoo","tags":["odoo"]},"headers":[],"relativePath":"posts/odoo/odoo-func-env-context.md","filePath":"posts/odoo/odoo-func-env-context.md","lastUpdated":1719550102000}'),e={name:"posts/odoo/odoo-func-env-context.md"},n=a(`<h1 id="odoo-func-env-context" tabindex="-1">odoo func env.context <a class="header-anchor" href="#odoo-func-env-context" aria-label="Permalink to &quot;odoo func env.context&quot;">​</a></h1><p>context 中内容会在下次前端触发后重置</p><h2 id="获取-context-内容" tabindex="-1">获取 context 内容 <a class="header-anchor" href="#获取-context-内容" aria-label="Permalink to &quot;获取 context 内容&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env.context.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;demo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span></code></pre></div><h2 id="增加-context-内容" tabindex="-1">增加 context 内容 <a class="header-anchor" href="#增加-context-内容" aria-label="Permalink to &quot;增加 context 内容&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env.context, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">demo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context)</span></span></code></pre></div><h2 id="with-context-内容-运行对象的某个函数" tabindex="-1">with_context 内容 运行对象的某个函数 <a class="header-anchor" href="#with-context-内容-运行对象的某个函数" aria-label="Permalink to &quot;with_context 内容 运行对象的某个函数&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.with_context(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">demo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).demo_func()</span></span></code></pre></div>`,8),o=[n];function h(l,p,d,k,c,r){return i(),t("div",null,o)}const u=s(e,[["render",h]]);export{g as __pageData,u as default};
