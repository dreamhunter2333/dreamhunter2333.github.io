import{_ as s,c as a,o as i,aj as n}from"./chunks/framework.B4uOnG9Z.js";const F=JSON.parse('{"title":"Linux终端下使用酸酸乳","description":"","frontmatter":{"title":"Linux终端下使用酸酸乳","date":"2019-03-31 01:00:01","categories":["linux"],"tags":["酸酸乳","ssr"]},"headers":[],"relativePath":"posts/linux/Linux-ssr.md","filePath":"posts/linux/Linux-ssr.md","lastUpdated":1719552876000}'),t={name:"posts/linux/Linux-ssr.md"},p=n(`<h1 id="linux终端下使用酸酸乳" tabindex="-1">Linux终端下使用酸酸乳 <a class="header-anchor" href="#linux终端下使用酸酸乳" aria-label="Permalink to &quot;Linux终端下使用酸酸乳&quot;">​</a></h1><h3 id="一、克隆或者直接下载ssr" tabindex="-1">一、克隆或者直接下载ssr <a class="header-anchor" href="#一、克隆或者直接下载ssr" aria-label="Permalink to &quot;一、克隆或者直接下载ssr&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/dreamhunter2333/shadowsocksr.git</span></span></code></pre></div><h3 id="二、在linux下使用" tabindex="-1">二、在Linux下使用 <a class="header-anchor" href="#二、在linux下使用" aria-label="Permalink to &quot;二、在Linux下使用&quot;">​</a></h3><p>**克隆或下载好之后，打开 shadowsocksr 文件夹，找到 config.json 配置文件，在这里填写好你相应的节点信息</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 修改好之后，打开你的终端，进入 shadowsocksr 文件夹 (根据自己所处的路径):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shadowsocksr/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 然后将 runssr 和 stopssr 两个脚本修改为可执行文件并移动到 /usr/local/bin/ 目录下，这样将其添加到了环境变量中，以后输入命令就可执行:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 755</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> runssr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stopssr</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> runssr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stopssr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将整个项目文件移动到 /opt/ 目录下 (假设此时还是在 shadowsocksr 下)：</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shadowsocksr/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 最后，只需要激活一下环境变量：</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/profile</span></span></code></pre></div><h3 id="三、打开-ssr-关闭-ssr" tabindex="-1">三、打开 SSR/关闭 SSR <a class="header-anchor" href="#三、打开-ssr-关闭-ssr" aria-label="Permalink to &quot;三、打开 SSR/关闭 SSR&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 现在，你就可以使用如下命令来随意地打开或关闭 SSR。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">runssr</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stopssr</span></span></code></pre></div><p>经过上面一通操作之后，如果以后需要修改节点信息，其配置文件在如下位置：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/opt/shadowsocksr/config.json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/opt/shadowsocksr/shadowsocks/ssserver.log</span></span></code></pre></div><h3 id="四、在linux终端使用ssr服务" tabindex="-1">四、在Linux终端使用SSR服务 <a class="header-anchor" href="#四、在linux终端使用ssr服务" aria-label="Permalink to &quot;四、在Linux终端使用SSR服务&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Privoxy 配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> privoxy</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 全局模式，将所有http/https请求走代理服务，全局代理按照如下操作即可。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加本地ssr服务到配置文件</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;forward-socks5 / 127.0.0.1:1080 .&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/privoxy/config</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Privoxy 默认监听端口是是8118</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> http_proxy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://127.0.0.1:8118</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> https_proxy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://127.0.0.1:8118</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> no_proxy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localhost</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动服务</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> privoxy.service</span></span></code></pre></div><p>务 systemctl start privoxy.service</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span></code></pre></div>`,14),l=[p];function h(e,k,r,d,o,c){return i(),a("div",null,l)}const y=s(t,[["render",h]]);export{F as __pageData,y as default};
