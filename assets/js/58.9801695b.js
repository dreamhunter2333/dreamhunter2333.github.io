(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{649:function(t,e,s){"use strict";s.r(e);var a=s(31),l=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"保证消息队列消费的幂等性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保证消息队列消费的幂等性"}},[t._v("#")]),t._v(" 保证消息队列消费的幂等性")]),t._v(" "),s("p",[t._v("幂等性，通俗点说，就一个数据，或者一个请求，给你重复来多次，确保对应的数据是不会改变的，不能出错。")]),t._v(" "),s("p",[t._v("结合业务来思考：")]),t._v(" "),s("ul",[s("li",[t._v("写库，你先根据主键查一下，存在 update、数据库的唯一键等")]),t._v(" "),s("li",[t._v("Redis，每次都是 set，天然幂等性")]),t._v(" "),s("li",[t._v("生产者发送每条数据的时候，里面加一个全局唯一的 id，消费时，先根据 id 查询")])])])}),[],!1,null,null,null);e.default=l.exports}}]);