import{_ as a,c as s,o as i,aj as n,aP as l,aQ as t}from"./chunks/framework.BF2cowCO.js";const E=JSON.parse('{"title":"Odoo class Many2many","description":"","frontmatter":{"title":"Odoo class Many2many","date":"2019-09-24 10:49:33","categories":"odoo","tags":["odoo","many2many"]},"headers":[],"relativePath":"posts/odoo/Odoo-class-Many2many.md","filePath":"posts/odoo/Odoo-class-Many2many.md","lastUpdated":1719503493000}'),e={name:"posts/odoo/Odoo-class-Many2many.md"},p=n('<h1 id="odoo-class-many2many" tabindex="-1">Odoo class Many2many <a class="header-anchor" href="#odoo-class-many2many" aria-label="Permalink to &quot;Odoo class Many2many&quot;">​</a></h1><h2 id="python-many2many-源码解释" tabindex="-1">python Many2many 源码解释 <a class="header-anchor" href="#python-many2many-源码解释" aria-label="Permalink to &quot;python Many2many 源码解释&quot;">​</a></h2><ul><li>:param relation: optional name of the table that stores the relation in the database (string)</li><li>:param column1: optional name of the column referring to &quot;these&quot; records in the table <code>relation</code> (string)</li><li>:param column2: optional name of the column referring to &quot;those&quot; records in the table <code>relation</code> (string)</li><li>The attributes <code>relation</code>, <code>column1</code> and <code>column2</code> are optional. If not given, names are automatically generated from model names, provided <code>model_name</code> and <code>comodel_name</code> are different!</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Many2many</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_RelationalMulti</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot; Many2many field; the value of such a field is the recordset.</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        :param comodel_name: name of the target model (string)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        The attribute ``comodel_name`` is mandatory except in the case of related</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        fields or field extensions.</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        :param relation: optional name of the table that stores the relation in</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            the database (string)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        :param column1: optional name of the column referring to &quot;these&quot; records</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            in the table ``relation`` (string)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        :param column2: optional name of the column referring to &quot;those&quot; records</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            in the table ``relation`` (string)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        The attributes ``relation``, ``column1`` and ``column2`` are optional. If not</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        given, names are automatically generated from model names, provided</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        ``model_name`` and ``comodel_name`` are different!</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        :param domain: an optional domain to set on candidate values on the</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            client side (domain or string)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        :param context: an optional context to use on the client side when</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            handling that field (dictionary)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        :param limit: optional limit to use upon read (integer)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span></code></pre></div><h2 id="python-many2many-例子" tabindex="-1">python Many2many 例子 <a class="header-anchor" href="#python-many2many-例子" aria-label="Permalink to &quot;python Many2many 例子&quot;">​</a></h2><p><img src="'+l+`" alt="many2many"></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">models</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    _name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;library.library&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # comodel_name: library_library</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # relation: library_library_library_partner_rel</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # column1: library_library_id</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # column2: library_partner_id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    authors </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fields.Many2many(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;library.partner&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="python-many2many-自定义-relation-column1-column2" tabindex="-1">python Many2many 自定义 relation column1 column2 <a class="header-anchor" href="#python-many2many-自定义-relation-column1-column2" aria-label="Permalink to &quot;python Many2many 自定义 relation column1 column2&quot;">​</a></h2><p><img src="`+t+`" alt="many2many"></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">models</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    _name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;library.library&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # comodel_name: library_library</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # relation: library_library_library_partner_rel</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # column1: library_library_id</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # column2: library_partner_id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    authors </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fields.Many2many(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;library.partner&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;library_relation&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;relation_library_id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;relation_partner_id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,10),h=[p];function o(r,k,d,y,c,m){return i(),s("div",null,h)}const F=a(e,[["render",o]]);export{E as __pageData,F as default};
