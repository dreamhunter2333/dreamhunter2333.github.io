(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{616:function(t,a,e){"use strict";e.r(a);var s=e(10),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"odoo-继承"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#odoo-继承"}},[t._v("#")]),t._v(" Odoo 继承")]),t._v(" "),e("h1",{attrs:{id:"inherit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inherit"}},[t._v("#")]),t._v(" _inherit")]),t._v(" "),e("ul",[e("li",[t._v("_name和_inherit不同\n"),e("ul",[e("li",[t._v("_inherit 属性传入多个值来继承多个父模型")])])]),t._v(" "),e("li",[t._v("_name和_inherit相同\n"),e("ul",[e("li",[t._v("同名继承 修改原模型")])])])]),t._v(" "),e("h1",{attrs:{id:"inherits-同-delegate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inherits-同-delegate"}},[t._v("#")]),t._v(" _inherits 同 delegate")]),t._v(" "),e("ul",[e("li",[t._v("使用代理继承无需复制数据即可在数据库中复用数据结构，这通过将一个模型嵌入另一个来实现。UML 中这种称作组合(composition)关系：父类无需子类即可存在，而子类必须要有父类才能存在。")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("_inherits "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("‘res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("partner’"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ‘partner_id’"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ndelegate"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);