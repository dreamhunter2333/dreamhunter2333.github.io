(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{666:function(a,t,n){"use strict";n.r(t);var e=n(31),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h2",{attrs:{id:"python-many2many-源码解释"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python-many2many-源码解释"}},[a._v("#")]),a._v(" python Many2many 源码解释")]),a._v(" "),n("ul",[n("li",[a._v(":param relation: optional name of the table that stores the relation in the database (string)")]),a._v(" "),n("li",[a._v(':param column1: optional name of the column referring to "these" records in the table '),n("code",[a._v("relation")]),a._v(" (string)")]),a._v(" "),n("li",[a._v(':param column2: optional name of the column referring to "those" records in the table '),n("code",[a._v("relation")]),a._v(" (string)")]),a._v(" "),n("li",[a._v("The attributes "),n("code",[a._v("relation")]),a._v(", "),n("code",[a._v("column1")]),a._v(" and "),n("code",[a._v("column2")]),a._v(" are optional. If not given, names are automatically generated from model names, provided "),n("code",[a._v("model_name")]),a._v(" and "),n("code",[a._v("comodel_name")]),a._v(" are different!")])]),a._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Many2many")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("_RelationalMulti"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[a._v('""" Many2many field; the value of such a field is the recordset.\n\n        :param comodel_name: name of the target model (string)\n\n        The attribute ``comodel_name`` is mandatory except in the case of related\n        fields or field extensions.\n\n        :param relation: optional name of the table that stores the relation in\n            the database (string)\n\n        :param column1: optional name of the column referring to "these" records\n            in the table ``relation`` (string)\n\n        :param column2: optional name of the column referring to "those" records\n            in the table ``relation`` (string)\n\n        The attributes ``relation``, ``column1`` and ``column2`` are optional. If not\n        given, names are automatically generated from model names, provided\n        ``model_name`` and ``comodel_name`` are different!\n\n        :param domain: an optional domain to set on candidate values on the\n            client side (domain or string)\n\n        :param context: an optional context to use on the client side when\n            handling that field (dictionary)\n\n        :param limit: optional limit to use upon read (integer)\n\n    """')]),a._v("\n")])])]),n("h2",{attrs:{id:"python-many2many-例子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python-many2many-例子"}},[a._v("#")]),a._v(" python Many2many 例子")]),a._v(" "),n("p",[n("img",{attrs:{src:"/imgs/odoo/odoo_class_many2many.png",alt:"many2many"}})]),a._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Library")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("models"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Model"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    _name "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[a._v("'library.library'")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# comodel_name: library_library")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# relation: library_library_library_partner_rel")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# column1: library_library_id")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# column2: library_partner_id")]),a._v("\n    authors "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" fields"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Many2many"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v("'library.partner'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),n("h2",{attrs:{id:"python-many2many-自定义-relation-column1-column2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python-many2many-自定义-relation-column1-column2"}},[a._v("#")]),a._v(" python Many2many 自定义 relation column1 column2")]),a._v(" "),n("p",[n("img",{attrs:{src:"/imgs/odoo/odoo_class_many2many_2.png",alt:"many2many"}})]),a._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Library")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("models"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Model"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    _name "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[a._v("'library.library'")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# comodel_name: library_library")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# relation: library_library_library_partner_rel")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# column1: library_library_id")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# column2: library_partner_id")]),a._v("\n    authors "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" fields"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Many2many"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v("'library.partner'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[a._v("'library_relation'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[a._v("'relation_library_id'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[a._v("'relation_partner_id'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);